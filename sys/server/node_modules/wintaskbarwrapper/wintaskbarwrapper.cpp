#pragma warning (disable: 4506) // v8 can probably be forgiven this nonsense: no definition for inline function 'v8::Persistent<T> v8::Persistent<T>::New(v8::Handle<T>)
#pragma warning (disable: 4530) // This is a node-gyp issue: C++ exception handler used, but unwind semantics are not enabled. Specify /EHsc

// A bit of STL stuff
#include <memory>

// A bit of MFC stuff
#define WINVER 0x0600
#include <afxdisp.h>

// A bit of .NET stuff
#include <mscoree.h>
#pragma comment(lib, "MSCorEE.lib")
#import "mscorlib.tlb" raw_interfaces_only rename("ReportEvent", "InteropServices_ReportEvent")
#define DOT_NET_VERSION L"v4.0.30319"
#import <..\v4.0.30319\System.tlb> exclude("IDataObject")
#import <..\v4.0.30319\System.Windows.Forms.tlb> exclude("IDataObject")

// A bit of JavaScript stuff
#include <node.h>
#include <v8.h>
using namespace v8;

void uninit(void* p);
Handle<Value> start(const Arguments& args);

CString AsCString(Local<Value> value)
{
	CString s;
	Local<String> str = value->ToString();
	value->ToString()->WriteAscii(s.GetBuffer(str->Length()));
	s.ReleaseBuffer();
	return s;
}

ICorRuntimeHost* g_pRuntimeHost = NULL;
mscorlib::_AppDomain* g_pAppDomain = NULL;

class CDotObject
{
public:

	CDotObject(_variant_t& vt)
	{
		m_pObject = (mscorlib::_Object*)(IUnknown*)vt;
	}

private:
	mscorlib::_Object* m_pObject;
};

class CAssembly
{
public:
	CAssembly(mscorlib::_AppDomain* pAppDomain, const CString& sFullName, const CString& sEasyName)
		: m_pAssembly(NULL)
		, m_sEasyName(sEasyName)
	{
		HRESULT hr = pAppDomain->Load_2(_bstr_t(sFullName), &m_pAssembly);
	}

	CDotObject CreateInstance(const CString& sTypeName)
	{
		CString sFullName = m_sEasyName + L"." + sTypeName;
		_variant_t vtObject;
		m_pAssembly->CreateInstance(_bstr_t(sFullName), &vtObject);
		return CDotObject(vtObject);
	}

private:
	mscorlib::_Assembly* m_pAssembly;
	CString m_sEasyName;
};

std::tr1::shared_ptr<CAssembly> g_pAssembly;

void init(Handle<Object> exports)
{
	IUnknown* pAppDomainUnknown = NULL;

    HRESULT hr;

	hr = CorBindToRuntimeEx(DOT_NET_VERSION, NULL, 0, CLSID_CorRuntimeHost, IID_ICorRuntimeHost, (LPVOID*)&g_pRuntimeHost);

	g_pRuntimeHost->Start();
	g_pRuntimeHost->GetDefaultDomain(&pAppDomainUnknown);

	hr = pAppDomainUnknown->QueryInterface(__uuidof(mscorlib::_AppDomain), (void**)&g_pAppDomain);

	g_pAssembly = std::tr1::shared_ptr<CAssembly>(new CAssembly(
						g_pAppDomain, 
						L"System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089",
						L"System.Windows.Forms"));

	exports->Set(String::NewSymbol("start"), FunctionTemplate::New(start)->GetFunction());
	node::AtExit(uninit);
}

Handle<Value> start(const Arguments& args)
{
	CDotObject menuStop = g_pAssembly->CreateInstance(L"MenuItem");

	return Boolean::New(true);
}

void uninit(void* p)
{
}

NODE_MODULE(wintaskbarwrapper, init)

