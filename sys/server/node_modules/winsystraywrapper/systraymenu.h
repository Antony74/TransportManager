#pragma once

#pragma warning (disable: 4506) // v8 can probably be forgiven this nonsense: no definition for inline function 'v8::Persistent<T> v8::Persistent<T>::New(v8::Handle<T>)
#pragma warning (disable: 4530) // This is a node-gyp issue: C++ exception handler used, but unwind semantics are not enabled. Specify /EHsc

// A bit of MFC stuff
#define WINVER 0x0600
#include <afxdisp.h>

// A bit of JavaScript stuff
#include <node.h>
#include <v8.h>
using namespace v8;

class CMenuObject
{
public:

	CMenuObject(Local<Object> oMenu);
	virtual ~CMenuObject();

	int GetLength();
	CString GetCaption(int nItem);
	bool DoAction(int nItem);
	bool DoDefaultAction();

private:

	Local<Object> m_oMenu;

};

class CSysTrayMenu
{
public:

	CSysTrayMenu(CMenuObject& menuObject);
	virtual ~CSysTrayMenu();

	bool Init(const CString& sIconPath, const CString& sTitle, HANDLE hWrappedProcess);
	void Run();
	void Stop();

	static CSysTrayMenu* GetSoleInstance();

private:

	static CSysTrayMenu* m_pSoleInstance;

	static BOOL CALLBACK EnumWindowsCallback(HWND hWnd, LPARAM lParam);
	static LRESULT CALLBACK WndProc(HWND hWnd, UINT nMsg, WPARAM wParam, LPARAM lParam);

	BOOL CALLBACK EnumWindowsCallbackImpl(HWND hWnd, LPARAM lParam);
	LRESULT CALLBACK WndProcImpl(HWND hWnd, UINT nMsg, WPARAM wParam, LPARAM lParam);

	HWND m_hWndMain;
	NOTIFYICONDATA m_icon;
	HMENU m_hMenu;

	HANDLE m_hWrappedProcess;
	DWORD m_dwWrappedProcessID;

	CMenuObject& m_menuObject;
};

CString AsCString(Value* value);
